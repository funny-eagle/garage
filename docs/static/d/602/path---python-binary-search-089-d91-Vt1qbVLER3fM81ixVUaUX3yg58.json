{"data":{"site":{"siteMetadata":{"title":"🤔️ Jason Yang's Blog","author":"Jason Yang"}},"markdownRemark":{"id":"4b759935-7169-5c21-a3ed-85719fb1003e","excerpt":"先来玩个数字游戏，我从1～100中选一个整数，你来猜中这个数字。如果你运气好的话可能十几次就猜中了，也可能是耐心的提问了我100次后。但其实你只需要提问7次就可以找到答案。举个例子，假设我选的数字是。问：这个数是否大于50？\n答：是问：大于75？\n答：是问：大于88？\n答：否问：大于82？\n答：是问：大于8…","html":"<p>先来玩个数字游戏，我从1～100中选一个整数，你来猜中这个数字。</p>\n<p>如果你运气好的话可能十几次就猜中了，也可能是耐心的提问了我100次后。</p>\n<p>但其实你只需要提问7次就可以找到答案。</p>\n<p>举个例子，假设我选的数字是<code class=\"language-text\">86</code>。</p>\n<ul>\n<li>问：这个数是否大于50？\n答：是</li>\n<li>问：大于75？\n答：是</li>\n<li>问：大于88？\n答：否</li>\n<li>问：大于82？\n答：是</li>\n<li>问：大于86？\n答：否</li>\n<li>问：大于84？\n答：是</li>\n<li>问：大于85？\n答：是</li>\n</ul>\n<p>最终答案锁定，大于85并且不大于86，即<code class=\"language-text\">86</code>。</p>\n<blockquote>\n<p>连续将满足条件的值等分，直到找到正确答案，这就是二分法。\n这个算法的本身就是递归的定义，也可以用递归来实现</p>\n</blockquote>\n<ul>\n<li>如果上下限相同，那么就是数字所在的位置，返回；</li>\n<li>否则找到两者的中间点，也就是上下限的平均值，查找数字在中间点的左侧还是右侧，然后继续查找数字所在的那半部分</li>\n</ul>\n<p>下面实现一个二分法查找，返回查找目标数字所在序列的位置，下标。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>!/usr/bin/python</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;&#39;&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--block syntax--python\"><span>二分法查找</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--block syntax--python\"><span>sequence&nbsp;查找的序列，范围</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--block syntax--python\"><span>number&nbsp;&nbsp;&nbsp;查找目标</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--block syntax--python\"><span>lower&nbsp;&nbsp;&nbsp;&nbsp;下限</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--block syntax--python\"><span>upper&nbsp;&nbsp;&nbsp;&nbsp;上限&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;&#39;&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>search</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>sequence</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>number</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>lower</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>upper</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>if</span></span><span>&nbsp;</span><span>lower</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>==</span></span><span>&nbsp;</span><span>upper</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t\t</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>assert</span></span><span>&nbsp;</span><span>number</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>==</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--item-access syntax--python\"><span>sequence</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span>upper</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t\t</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span>upper</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>else</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t\t</span><span>middle</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span>(</span><span>lower</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>+</span></span><span>&nbsp;</span><span>upper</span><span>)</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>/</span><span>/</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>2</span></span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>找到两者的中间点</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t\t</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>if</span></span><span>&nbsp;</span><span>number</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--item-access syntax--python\"><span>sequence</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span>middle</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span><span>:&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--punctuation syntax--whitespace syntax--comment syntax--leading syntax--python\"><span>\t\t\t</span></span><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>如果在中间点的右侧，就在middle+1&nbsp;～&nbsp;upper的范围内继续找</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t\t\t</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>search</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>sequence</span><span>,&nbsp;</span><span>number</span><span>,&nbsp;</span><span>middle</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>+</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span><span>,&nbsp;</span><span>upper</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t\t</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>else</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--punctuation syntax--whitespace syntax--comment syntax--leading syntax--python\"><span>\t\t\t</span></span><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>如果在中间点的左侧，就在lower～middle的范围继续找</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t\t\t</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>search</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>sequence</span><span>,&nbsp;</span><span>number</span><span>,&nbsp;</span><span>lower</span><span>,&nbsp;</span><span>middle</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>\t\t\t</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>初始化一个1～100的列表</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>seq</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--list syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--punctuation syntax--definition syntax--list syntax--end syntax--python\"><span>]</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--repeat syntax--python\"><span>for</span></span><span>&nbsp;</span><span>x</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--support syntax--type syntax--python\"><span>xrange</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span><span>,</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>101</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>\t</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>seq</span><span>.</span><span>append</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>search</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>seq</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>86</span></span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>100</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>","frontmatter":{"title":"Python 另一个经典递归：二分法查找","date":"2017-04-07"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python-binary-search/","previous":null,"next":{"fields":{"slug":"/linux-open-port/"},"frontmatter":{"title":"Linux防火墙开放端口号"}}}}