{"data":{"site":{"siteMetadata":{"title":"🤔️ Jason Yang's Blog","author":"Jason Yang"}},"markdownRemark":{"id":"31c9cb9f-c88c-5c4c-ba3e-2aa485fe48e0","excerpt":"维基百科的描述JavaScript，一种直译式脚本语言，是一种动态类型、基于原型的语言，内置支持类别。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML网页上使用，用来给HTML网页增加动态功能。然而现在JavaScript也可被用于网络服务器，如Node.js…","html":"<h2>维基百科的描述</h2>\n<blockquote>\n<p>JavaScript，一种直译式脚本语言，是一种动态类型、基于原型的语言，内置支持类别。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML网页上使用，用来给HTML网页增加动态功能。然而现在JavaScript也可被用于网络服务器，如Node.js。</p>\n</blockquote>\n<blockquote>\n<p>在1995年时，由网景公司的布兰登·艾克，在网景导航者浏览器上首次设计实现而成。因为网景公司与昇阳公司的营销合作，加上网景公司管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语义与Self及Scheme较为接近。</p>\n</blockquote>\n<blockquote>\n<p>为了获取技术优势，微软推出了JScript，与JavaScript同样可在浏览器上运行。为了统一规格，1997年，在ECMA（欧洲计算机制造商协会）的协调下，由网景、昇阳、微软和Borland公司组成的工作组确定统一标准：ECMA-262。因为JavaScript兼容于ECMA标准，因此也称为ECMAScript。</p>\n</blockquote>\n<blockquote>\n<p>一般来说，完整的JavaScript包括以下几个部分：</p>\n</blockquote>\n<blockquote>\n<p>ECMAScript，描述了该语言的语法和基本对象\n文档对象模型（DOM），描述处理网页内容的方法和接口\n浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口\n它的基本特点如下：</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>是一种解释性脚本语言（代码不进行预编译）。</li>\n<li>主要用来向HTML页面添加交互行为。</li>\n<li>可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。\nJavaScript常用来完成以下任务：</li>\n</ul>\n</blockquote>\n<blockquote>\n<p> 嵌入动态文本于HTML页面\n对浏览器事件作出响应\n读写HTML元素\n在数据被提交到服务器之前验证数据\n检测访客的浏览器信息\n控制cookies，包括创建和修改等</p>\n</blockquote>\n<h2>语法（Syntax）</h2>\n<p>这节介绍一些JavaScript的基本语法规则。</p>\n<h3>语句和表达式（Statements versus expressions）</h3>\n<p>了解JavaScript的语法，这有助于了解（简而言之），它有两个主要的语法类型：语句和表达式。</p>\n<p>语句通常“做某些事情”。程序是一组语句序列。举个例子，下面声明（创建）一个 变量 foo： var foo;\n表达式产生值。他们通常位于赋值操作的邮编，函数参数，等。举个例子： 3 * 7\n语句和表达式之间的区别最好通过实例说明，JavaScript（像Java）有两种不同的方式实现if-then-else。一种是用语句：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;x</span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>y&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;y</span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>else</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>-</span></span><span>y</span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>另一种是表达式：</p>\n<p><code class=\"language-text\">var x = y &gt;= 0 ? y : -y;</code>\n你可以将后者作为函数参数（但前者不行）：</p>\n<p><code class=\"language-text\">myFunction(y &gt;= 0 ? y : -y)</code>\n最后，每当JavaScript期待一个语句，你也可以用一个表达式代替。例如：</p>\n<p><code class=\"language-text\">foo(bar(7, 1));</code>\nfoo(…)；是一个语句（也叫做表达式语句），bar(7, 1)是一个表达式。他们都实现函数调用。</p>\n<p>流程控制语句和语句块（Control flow statements and blocks）</p>\n<p>流程控制语句，其语句体可以是单条语句。举两个例子：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>obj&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>!==</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--null syntax--js\"><span>null</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>obj</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>foo</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>while</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;x</span><span class=\"syntax--keyword syntax--operator syntax--decrement syntax--js\"><span>--</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div></pre></div>\n<p>然而，任何语句总能被语句块代替，花括号包含零或多条语句。因此，你也可以这样写：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>obj&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>!==</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--null syntax--js\"><span>null</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>obj</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>foo</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>while</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;x</span><span class=\"syntax--keyword syntax--operator syntax--decrement syntax--js\"><span>--</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>在本文中，我们只是用后一种方式。</p>\n<h3>分号（Semicolons）</h3>\n<p>分号在JavaScript中是可选的。但省略他们可能带来意想不到的结果，所以我建议你不要那样做。</p>\n<p>正如上面所看到的，分号作为语句的结尾，但语句块不需要。仅有一种情况下你将见到块后面有分号：函数表达式后面的函数体块。表达式作为语句的结尾，后面是分号：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--text syntax--plain syntax--null-grammar\"><span>var&nbsp;x&nbsp;=&nbsp;3&nbsp;*&nbsp;7;</span></span></div><div class=\"line\"><span class=\"syntax--text syntax--plain syntax--null-grammar\"><span>var&nbsp;f&nbsp;=&nbsp;function&nbsp;()&nbsp;{&nbsp;};</span></span></div></pre></div>\n<h3>注释（Comments）</h3>\n<p>JavaScript有两种注释方式：单行注释和多行注释。单行注释以//开头，以换行符结尾：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>x</span><span class=\"syntax--keyword syntax--operator syntax--increment syntax--js\"><span>++</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;单行（single-line）注释</span></span></span></div></pre></div>\n<p>多行注释用/**/包裹</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--comment syntax--block syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>/*</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--comment syntax--block syntax--js\"><span>&nbsp;这是多行注释</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--comment syntax--block syntax--js\"><span>&nbsp;多行哦</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--comment syntax--block syntax--js\"><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>*/</span></span></span></span></div></pre></div>\n<h3>变量和赋值（Variables and assignment）</h3>\n<p>JavaScript中的变量在使用之前必须先声明：</p>\n<p>var foo;  // 声明变量“foo”</p>\n<h4>赋值（Assignment）</h4>\n<p>你可以在生命变量的同时给它赋值：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;foo&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>6</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div></pre></div>\n<p>你也可以给已经存在的变量重新赋值：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>foo&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>4</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;更改变量的值</span></span></span></div></pre></div>\n<h4>复合赋值操作符（Compount assignment operators）</h4>\n<p>有很多符合赋值操作符，例如+=。下面的两个赋值操作等价：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--compound syntax--js\"><span>+=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>+</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div></pre></div>\n<h4>标识符和变量名（Identifiers and variable names）</h4>\n<p>标识符就是事物的名字，在JavaScript中他们扮演不同的语法角色。例如，变量的名称是一个标识符。</p>\n<p>大体上，标识符的第一个字符可以是任何Unicode字符，美元标志符（$）或下划线（_）。后面的字符可以是任意字符和数字。因此，下面全是合法的标识符：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>arg0</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>_tmp</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>$elem</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>π</span></span></div></pre></div>\n<p>一些标识符是“保留关键字”——他们是语法的一部分，不能用作变量名：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--variable syntax--language syntax--js\"><span>arguments</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>break</span></span><span>&nbsp;case&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>catch</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--class syntax--js\"><span class=\"syntax--storage syntax--type syntax--class syntax--js\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--js\"><span>const</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>continue</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--debugger syntax--js\"><span>debugger</span></span><span>&nbsp;default&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--delete syntax--js\"><span>delete</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>do</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>else</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--js\"><span>enum</span></span><span>&nbsp;eval&nbsp;</span><span class=\"syntax--meta syntax--export syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>export</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--module syntax--js\"><span>extends</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--module syntax--js\"><span>false</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--module syntax--js\"><span>finally</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--module syntax--js\"><span>for</span></span><span>&nbsp;</span></span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;if&nbsp;implements&nbsp;import&nbsp;in&nbsp;instanceof&nbsp;interface&nbsp;let&nbsp;new&nbsp;null&nbsp;package&nbsp;private&nbsp;protected&nbsp;public&nbsp;return&nbsp;static&nbsp;super&nbsp;switch&nbsp;this&nbsp;throw&nbsp;true&nbsp;try&nbsp;typeof&nbsp;var&nbsp;void&nbsp;while&nbsp;with&nbsp;yield</span></span></span></div></pre></div>\n<p>从技术上讲，下面三个标识符不是保留字，但也不应该作为变量名：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--constant syntax--language syntax--js\"><span>Infinity</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>NaN</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span></span></div></pre></div>\n<h3>值（Values）</h3>\n<p>JavaScript有所有我们期待的编程语言值类型：布尔，数字，字符串，数组等。JavaScript中的所有值都有属性。每个属性有一个键（或名字）和一个值。考虑记录的域（fields of record）。你可以使用点（.）操作符读取属性：</p>\n<p>value.propKey\n举个例子：字符串“abc”有属性lenght（长度）。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;str&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>str</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span></span></div></pre></div>\n<p>上面的代码也可以写成下面这样：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span></span></div></pre></div>\n<p>点操作符也可以用来给属性赋值：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;obj&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;空对象</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>obj</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>foo</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;创建属性“foo”，设置它为123</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>obj</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>foo</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span></span></div></pre></div>\n<p>你也可以通过它（.）调用方法：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>hello</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>toUpperCase</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>HELLO</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>上面，我们在值“hello”上面调用方法 toUpperCase()。</p>\n<p>原始类型值和对象（Primitive values versus objects）</p>\n<p>JavaScript定义了不同值之间的区别：</p>\n<p>原始值包括：boolean，number，string，null和undefined，\n所有其他的值都是对象。实际上对象被定义为——所有不为原始类型的值。\n两者之间的主要区别在于他们是如何被比较的：每一个对象有一个独一无二的标志，并且仅和自己相等：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;obj1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;一个空对象</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;obj2&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;另一个空对象</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;obj1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;obj2</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--false syntax--js\"><span>false</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;obj1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;obj1</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<p>相反，所有原始值只要编码值相同就被认为是相同的：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;prim1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;prim2&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;prim1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;prim2</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<p>接下来的两节介绍原始值和对象的更多细节。</p>\n<p>原始类型值（Primitive values）</p>\n<p>下面的全是原始类型值（简称：原始值）：</p>\n<p>布尔类型：true，false\n数字类型：1736，1.351\n字符串类型: ‘abc’，“abc”\n两个“无值（non-values）”：undefined，null\n原始值的特征：</p>\n<p>值做比较时：“内容”做比较。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<p>无法更改：值的属性无法更改，无法添加和移除属性。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;str&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>str</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>foo</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;try&nbsp;to&nbsp;create&nbsp;property&nbsp;`foo`&nbsp;⇒&nbsp;no&nbsp;effect</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>str</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>foo</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;unknown&nbsp;property</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span><span>&nbsp;</span></span></div></pre></div>\n<p>(获取未知属性总返回undefined)</p>\n<p>原始值的集合是固定的（fixed set of values）：你不能自定义原始值。</p>\n<h3>对象（Objects）</h3>\n<p>所有非原始值（non-primitive）的值都是对象。最常见的几种对象类型是：</p>\n<p>简单对象（类型是Object）能通过对象字面量创建：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;firstName</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Jane</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;lastName</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Doe</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>上面的对象有两个属性：firstName属性的值是“Jane”，lastName属性的值是“Doe”。</p>\n<p>数组（类型是 Array）能通过数组字面量创建：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>apple</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>banana</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>cherry</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div></pre></div>\n<p>上面的数组有三个元素，可以通过数字索引访问。例如“apple”的索引是0.</p>\n<p>正则表达式对象（类型是 RegExp）能通过正则表达式字面量创建。</p>\n<p>/^a+b+$/</p>\n<p>对象的特征：</p>\n<p>比较的是引用：比较的是标识符，每个值有自己的标识符。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;两个不同的空对象</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--false syntax--js\"><span>false</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;obj1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;obj2&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;obj1</span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;obj1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;obj2</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<p>默认可以更改。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;obj&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>obj</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>foo</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>obj</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>foo</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span></span></div></pre></div>\n<p>-** 用户可扩展（user-extensible）：**你可以通过构造函数定义新的对象类型。</p>\n<p>数组所有的数据结构（如）都是对象，但并不是所有的对象都是数据结构。例如：正则表达式是对象，但不是一个数据结构。</p>\n<p>undefined 和 null（undefined and null）</p>\n<p>多少有些不必要，JavaScript有两个“无值（non-values）”：undefined 和 null。</p>\n<p>undefined的意思是“没有值（no value）”。为初始化的变量是undefined：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;foo</span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;foo</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span></span></div></pre></div>\n<p>如果你读取不存在的属性，将返回undefined：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;obj&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;空对象</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>obj</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>foo</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span></span></div></pre></div>\n<p>未传递的参数也是undefined：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>x</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;x&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span></span></div></pre></div>\n<p>null的意思是“没有对象（no object）”。它被用来表示对象的无值（参数，链上的对象等）。</p>\n<p>通常情况下你应该把undefined和null看成是等价的，如果他们代表相同意义的无值的话。检查他们的一种方式是通过严格比较：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>||</span></span><span>&nbsp;x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--null syntax--js\"><span>null</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--spread syntax--js\"><span>...</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>另一种在实际中使用的方法是认为undefined 和 null 都是false：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>!</span></span><span>x</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--spread syntax--js\"><span>...</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p><strong>警告：</strong>false，0，NaN 和 “” 都被当作false。</p>\n<h3>包装类型（Wrapper types）</h3>\n<p>对象类型的实例Foo（包括内建类型，例如Array和其他自定义类型）从对象Foo.prototype上获取方法。你可以通过读这个方法但不调用它的方式验证这点：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span><span>]</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>push</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Array</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>prototype</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>push</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<p>相反，原始类型是没有类型的，所以每个原始类型有一个关联类型，称之为包装类型：</p>\n<p>布尔值的包装类型是 Boolean。布尔值从Boolean.prototype上获取方法：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>toString</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Boolean</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>prototype</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>toString</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<p>注意包装类型的名字首个字母是大写的B。如果在JavaScript中布尔值的类型可以访问，那么它可能会被成为布尔对象。</p>\n<p>数字值的包装类型是Number。\n字符串值的包装类型是String。\n包装类型也有实例（他们的实例是对象），但不常用。相反，包装类型有其他用处：如果你将他们作为函数调用，他们可以将值转换为原始类型。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Number</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>123</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>String</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>true</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>通过typeof 和 instanceof 将值分类（Categorizing values via typeof and instanceof）</p>\n<p>有两个操作符可以用来将值分类：typeof 主要用来操作原始值，instanceof 主要用来造作对象。</p>\n<p>typeof 使用方法如下：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--typeof syntax--js\"><span>typeof</span></span><span>&nbsp;«value»</span></span></div></pre></div>\n<p>它返回描述 value “类型”的一个字符串。例如：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--typeof syntax--js\"><span>typeof</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>boolean</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--typeof syntax--js\"><span>typeof</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>string</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--typeof syntax--js\"><span>typeof</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;空对象字面量</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>object</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--typeof syntax--js\"><span>typeof</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span><span>]</span></span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;空数组字面量</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>object</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>下标列出了所有typeof的结果：</p>\n<p>操作数\t结果</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span><span>\t</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>undefined</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--constant syntax--language syntax--null syntax--js\"><span>null</span></span><span>\t</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>object</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--support syntax--class syntax--js\"><span>Boolean</span></span><span>&nbsp;value\t</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>boolean</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--support syntax--class syntax--js\"><span>Number</span></span><span>&nbsp;value\t</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>number</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--support syntax--class syntax--js\"><span>String</span></span><span>&nbsp;value\t</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>string</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--support syntax--class syntax--js\"><span>Function</span></span><span>\t</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>function</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>All&nbsp;other&nbsp;values\t</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>object</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>有两个东西和我们所说的原始值和对象是矛盾的：</p>\n<p>函数的类型是“function”而不是“object”。鉴于函数（类型为“function”）是对象（类型是对象）的子类型，这不是一个错误。\nnull的类型是“object”。这是一个bug，但从没被修复，因为修复后会破坏现有的代码。\ninstanceof使用方法如下：</p>\n<p>«value» instanceof «Constr»\n如果 value 是一个对象，并且value 是由构造函数Constr创建的（考虑：类）。例如：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;b&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>Bar</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span><span>)</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;通过构造函数Bar创建对象</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;b&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--instanceof syntax--js\"><span>instanceof</span></span><span>&nbsp;Bar</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--begin syntax--js\"><span>{</span></span><span class=\"syntax--punctuation syntax--section syntax--scope syntax--end syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--instanceof syntax--js\"><span>instanceof</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Object</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span><span>]</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--instanceof syntax--js\"><span>instanceof</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Array</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span><span>]</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--instanceof syntax--js\"><span>instanceof</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Object</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;数字是对象的子类型</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<h3>布尔（Booleans）</h3>\n<p>布尔类型原始值包括true和false。下面的操作符产生布尔值：</p>\n<p>二元逻辑运算符：&#x26;&#x26;（与），||（或）\n前缀逻辑运算符：!（非）\n等值运算符：=== !== == !=\n比较运算符（字符串或数字）：> >= &#x3C; &#x3C;=\n真值和假值（Truthy and falsy）</p>\n<p>每当JavaScript希望一个布尔值时（例如：if语句的条件），可以使用任何值。它将被理解（转换）为true或false。下面的值被理解为false：</p>\n<p>undefined, null\n布尔: false\n数字: -0, NaN\n字符串: ”\n所有其他值被认为true。被理解为false的值成为假值（falsy），被理解为true的值成为真值（truthy）。可以使用Boolean作为函数测试值被理解为什么。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Boolean</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--false syntax--js\"><span>false</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Boolean</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--false syntax--js\"><span>false</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Boolean</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<h4>二元逻辑运算符（Binary logical operators）</h4>\n<p>JavaScript中的二元逻辑运算符是短路运算——如果第一个操作数可以确定结果，第二个操作数将不被验证。例如，在下面的代码中，函数foo()不会被调用。</p>\n<p>false &#x26;&#x26; foo()\ntrue  || foo()\n此外，二元逻辑运算符返回操作数中的一个——可能是一个布尔值，也可能不是。一张真值表用来决定返回哪个值：</p>\n<p>与：如果第一个操作数是假值，返回第一个。否则返回第二个操作数。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>NaN</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>&amp;&amp;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>NaN</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>&amp;&amp;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>或：如果第一个操作数是真值，返回第一个。否则，返回第二个操作数。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>||</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>||</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>123</span></span></span></div></pre></div>\n<h4>等值运算符（Equality operators）</h4>\n<p>在JavaScript中检测相等，你可以使用严格相等（===）和严格不等（!==）。或者你也可以使用非严格相等（==）和非严格不等（!=）。经验规则：总是用严格运算符，假装非严格运算符不存在。严格相等更安全。</p>\n<h3>数字（Numbers）</h3>\n<p>JavaScript中的所有数字都是浮点型（虽然大部分的JavaScript引擎内部也使用整数）。至于为什么这样设计，查看这里（每一个JavaScript开发者应该了解的浮点知识）。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span><span class=\"syntax--meta syntax--delimiter syntax--decimal syntax--period syntax--js\"><span>.</span></span><span>0</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span></span></div></pre></div>\n<p>特殊数字：\nNaN (“不是一个数字 not a number”): 错误值。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--js\"><span>Number</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>xyz</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;&#39;xyz&#39;&nbsp;不能被转换为数字</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>NaN</span></span></span></div></pre></div>\n<p>Infinity：也是最大错误值（溢出）.</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>/</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>Infinity</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--class syntax--math syntax--js\"><span>Math</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--math syntax--js\"><span>pow</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>2</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1024</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;数字太大了</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>Infinity</span></span></span></div></pre></div>\n<p>Infinity 有时很有用，因为它比任何其他数字都大。同样，-Infinity 比其他任何数字都小。</p>\n<p>JavaScript有两个零，+0 和 -0。它通常不让你看到，并简单将两个零都显示为0：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>+</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span></span></div></pre></div>\n<p>因此最好假装只有一个零（正如我们看到假值时所做的那样：-0 和 +0 都是假值）。</p>\n<h3>运算符（Operators）</h3>\n<p>JavaScript中有下列算数运算符：</p>\n<p>加: number1 + number2\n减: number1 - number2\n乘: number1 * number2\n除: number1 / number2\n求模: number1 % number2\n自增: ++variable, variable++\n自减: —variable, variable—\n负值: -value\n转换为数字: +value\n全局对象Math通过函数提供更多算数运算操作。</p>\n<p>JavaScript中也有位运算符（例如：位与 &#x26;）。</p>\n<h3>字符串（Strings）</h3>\n<p>字符串可以直接通过字符串字面量创建。这些字面量被单引号或双引号包裹。反斜线（\\）转义字符并且产生一些控制字符。例如：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--double syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&quot;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&quot;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Did&nbsp;she&nbsp;say&nbsp;&quot;Hello&quot;?</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--double syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&quot;</span></span><span>Did&nbsp;she&nbsp;say&nbsp;</span><span class=\"syntax--constant syntax--character syntax--escape syntax--js\"><span>\\&quot;</span></span><span>Hello</span><span class=\"syntax--constant syntax--character syntax--escape syntax--js\"><span>\\&quot;</span></span><span>?</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&quot;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>That</span><span class=\"syntax--constant syntax--character syntax--escape syntax--js\"><span>\\&#39;</span></span><span>s&nbsp;nice!</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--double syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&quot;</span></span><span>That&#39;s&nbsp;nice!</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&quot;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Line&nbsp;1</span><span class=\"syntax--constant syntax--character syntax--escape syntax--js\"><span>\\n</span></span><span>Line&nbsp;2</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;换行</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Backlash:&nbsp;</span><span class=\"syntax--constant syntax--character syntax--escape syntax--js\"><span>\\\\</span></span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>可以通过方括号访问单个字符：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;str&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;str</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>b</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>length属性是字符串的字符数量。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span></span></div></pre></div>\n<p>提醒：字符串是不可变的，如果你想改变现有字符串，你需要创建一个行的字符串。</p>\n<h4>字符串运算符（String operators）</h4>\n<p>字符串可以通过加号操作符（+）拼接，如果其中一个操作数为字符串，会将另一个操作数也转换为字符串。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;messageCount&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>You&nbsp;have&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>+</span></span><span>messageCount</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>+</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>&nbsp;messages</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>You&nbsp;have&nbsp;3&nbsp;messages</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>连续执行拼接操作可以使用 += 操作符：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;str&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;str&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--compound syntax--js\"><span>+=</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Multiple&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;str&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--compound syntax--js\"><span>+=</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>pieces&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;str&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--compound syntax--js\"><span>+=</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>are&nbsp;concatenated.</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;str</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Multiple&nbsp;pieces&nbsp;are&nbsp;concatenated.</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<h4>字符串方法（String methods）</h4>\n<p>字符串有许多有用的方法。例如：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>slice</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;复制子字符串</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>bc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>slice</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>2</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>b</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span class=\"syntax--constant syntax--character syntax--escape syntax--js\"><span>\\t</span></span><span>&nbsp;xyz&nbsp;&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>trim</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;移除空白字符</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>xyz</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>mjölnir</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>toUpperCase</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>MJÖLNIR</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>indexOf</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>b</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;查找字符串</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>indexOf</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>x</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span></span></div></pre></div>\n<h3>语句（Statements）</h3>\n<h4>条件（Conditionals）</h4>\n<p>if语句通过布尔条件决定执行那个分支：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>myvar&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;then</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>myvar&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;then</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>else</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;else</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>myvar&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;then</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>else</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>myvar&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;else-if</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>else</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>myvar&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>2</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;else-if</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>else</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;else</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>下面的switch语句，furit的值决定那个分支被执行。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span class=\"syntax--keyword syntax--control syntax--switch syntax--js\"><span>switch</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--switch-expression syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span>fruit</span><span class=\"syntax--punctuation syntax--definition syntax--switch-expression syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--section syntax--switch-block syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--case syntax--js\"><span>case</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>banana</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--section syntax--case-statement syntax--js\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;...</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>break</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--case syntax--js\"><span>case</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>apple</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--section syntax--case-statement syntax--js\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;...</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>break</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--default syntax--js\"><span>default</span></span><span class=\"syntax--punctuation syntax--definition syntax--section syntax--case-statement syntax--js\"><span>:</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;所有其他情况</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;...</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--switch-statement syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--section syntax--switch-block syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></span></div></pre></div>\n<h4>循环（Loops）</h4>\n<p>for 循环的格式如下：</p>\n<p>for(初始化; 当条件成立时循环; 下一步操作)\n例子：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>for</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;i</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&lt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>arr</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;i</span><span class=\"syntax--keyword syntax--operator syntax--increment syntax--js\"><span>++</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span>arr</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>i</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>当条件成立时while循环继续循环它的循环体。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;和上面的for循环相等</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>while</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>i&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&lt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>arr</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span>arr</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>i</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;i</span><span class=\"syntax--keyword syntax--operator syntax--increment syntax--js\"><span>++</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>当条件成立时，do-while循环继续循环。由于条件位于循环体之后，所以循环体总是被至少至少执行一次。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>do</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;...</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>while</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>条件</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div></pre></div>\n<p>在所有的循环中：</p>\n<p>break中断循环\ncontinue开始一个新的循环迭代\n函数（Functions）</p>\n<p>定义函数的一种方法是通过函数声明：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>add</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>param1</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>param2</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;param1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>+</span></span><span>&nbsp;param2</span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>上面的代码定义一个名称叫做add的函数，有两个参数param1和param2，并且返回参数的和。下面是你如何调用这个函数：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>add</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>6</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>1</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>7</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>add</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>a</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>b</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>ab</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<p>另一种定义add()函数的方法是通过函数表达式：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>add</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>param1</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>param2</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;param1&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--js\"><span>+</span></span><span>&nbsp;param2</span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div></pre></div>\n<p>函数表达式产生一个值，因此可以直接将函数作为参数传递给其他函数：</p>\n<p>someOtherFunction(function (p1, p2) { … });\n函数声明提升（Function declarations are hoisted）</p>\n<p>函数声明会被提升，他们全被移动到当前作用域开始之处。这允许你在函数声明之前调用它们：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>foo</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>bar</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;没问题，bar被提升</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>bar</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--spread syntax--js\"><span>...</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>注意：虽然变量声明也会被提升，但赋值的过程不会被提升：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>foo</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>bar</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;有问题，bar是undefined</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>bar</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;...</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<h4>特殊变量arguments（The special variable arguments）</h4>\n<p>在JavaScript中你可以调用任意函数并传递任意数量的参数——语言绝不会抱怨。那可以工作，然而，使所有参数可访问需要通过特殊变量 arguments。arguments 看起来像数组，但它没有数组的方法。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--language syntax--js\"><span>arguments</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--storage syntax--type syntax--var syntax--js\"><span>var</span></span><span>&nbsp;args&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>a</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>b</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>c</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>args</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;args</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;获取索引为0的元素</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>a</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span></span></div></pre></div>\n<h4>太多或太少参数（Too many or too few arguments）</h4>\n<p>让我们通过下面的函数探索JavaScript中传递太多或太少参数时如何处理（函数 toArray在后面提到）</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>x</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>y</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span>x</span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;y</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>toArray</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--language syntax--js\"><span>arguments</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>多出的参数将被忽略（可以通过arguments访问）：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>a</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>b</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>c</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>a&nbsp;b</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>a</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>b</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>c</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div></pre></div>\n<p>缺少的参数将是undefined：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>a</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>a&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>a</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span><span>]</span></span></span></div></pre></div>\n<h4>可选参数（Optional parameters）</h4>\n<p>下面是一个常见模式，给参数设置默认值：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>pair</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>x</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>y</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;x&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>||</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;(*)</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;y&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--js\"><span>||</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>&nbsp;x</span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;y&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>在（*）这行，如果x是真值（除了：null，undefined 等），||操作符返回x。否则，它返回第二个操作数。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>pair</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>pair</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>0</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>pair</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>5</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>3</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>5</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span>&nbsp;</span></span></div></pre></div>\n<p>强制数量（Enforcing an arity）</p>\n<p>如果你想强制参数的数量，你可以检测arguments.length：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>pair</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>x</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>y</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>if</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--language syntax--js\"><span>arguments</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>!==</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>2</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>throw</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>Error</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Need&nbsp;exactly&nbsp;2&nbsp;arguments</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--spread syntax--js\"><span>...</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>将arguments 转换为数组（Converting arguments to an array）</p>\n<p>arguments 不是一个数组，它仅仅是类数组（array-like）：它有一个length属性，并且你可以通过方括号索引方式访问它的元素。然而，你不能移除元素，或在它上面调用任何数组方法。因此，有时你需要将其转换为数组。这就是下面函数的作用。</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>toArray</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--parameter syntax--function syntax--js\"><span>arrayLikeObject</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span><span>]</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--object syntax--property syntax--js\"><span>slice</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>call</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span>arrayLikeObject</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<h3>异常处理（Exception handling）</h3>\n<p>异常处理最常见的方式像下面这样：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>throwException</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>throw</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>Error</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>Problem!</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--control syntax--js\"><span>try</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>throwException</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>catch</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span>e</span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span>e</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;错误：信息</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>e</span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--variable syntax--other syntax--property syntax--js\"><span>stack</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;非标准，但大部分浏览器支持</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>try分支包裹易出错的代码，如果try分支内部抛出异常，catch分支将会执行。</p>\n<h3>严格模式（Strict mode）</h3>\n<p>严格模式开启检测和一些其他措施，是JavaScript变成更整洁的语言。推荐使用严格模式。为了开启严格模式，只需在JavaScript文件或script标签第一行添加如下语句：</p>\n<p>‘use strict’;\n你也可以在每个函数上选择性开启严格模式，只需将上面的代码放在函数的开头：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>functionInStrictMode</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>use&nbsp;strict</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>下面的两小节看下严格模式的三大好处。</p>\n<h3>明确错误（Explicit errors）</h3>\n<p>让我们看一个例子，严格模式给我们明确的错误，否则JavaScript总是静默失败：下面的函数 f() 执行一些非法操作，它试图更改所有字符串都有的只读属性——length：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>5</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>当你调用上面的函数，它静默失败，赋值操作被简单忽略。让我们将 f() 在严格模式下运行：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f_strict</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>use&nbsp;strict</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>abc</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--property syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--variable syntax--property syntax--js\"><span>length</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>5</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div></pre></div>\n<p>现在浏览器报给我们一些错误：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f_strict</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--support syntax--class syntax--js\"><span>TypeError</span></span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;Cannot&nbsp;assign&nbsp;to&nbsp;read&nbsp;only&nbsp;property&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>length</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--of syntax--js\"><span>of</span></span><span>&nbsp;abc</span></span></div></pre></div>\n<p>不是方法的函数中的this（this in non-method functions）</p>\n<p>在严格模式下，不作为方法的函数中的this值是undefined：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f_strict</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>use&nbsp;strict</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--language syntax--js\"><span>this</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f_strict</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--js\"><span>undefined</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;true</span></span></span></div></pre></div>\n<p>在非严格模式下，this的值是被称作全局对象（global object）（在浏览器里是window）：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--js\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--language syntax--js\"><span>this</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--entity syntax--name syntax--type syntax--object syntax--console syntax--js\"><span>console</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--console syntax--js\"><span>log</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>===</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--variable syntax--dom syntax--js\"><span>window</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;true</span></span></span></div></pre></div>\n<h4>不再自动创建全局变量（No auto-created global variables）</h4>\n<p>在非严格模式下，如果你给不存在的变量赋值，JavaScript会自动创建一个全局变量：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;foo&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>5</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;不会报错</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;foo</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>5</span></span></span></div></pre></div>\n<p>在严格模式下，这会产生一个错误：</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function syntax--js\"><span class=\"syntax--storage syntax--type syntax--function syntax--js\"><span>function</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f_strict</span></span><span class=\"syntax--meta syntax--parameters syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>use&nbsp;strict</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;foo2&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--decimal syntax--js\"><span>4</span></span><span class=\"syntax--punctuation syntax--terminator syntax--statement syntax--js\"><span>;</span></span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly syntax--js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--js\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--js\"><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>f_strict</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--support syntax--class syntax--js\"><span>ReferenceError</span></span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;foo2&nbsp;is&nbsp;not&nbsp;defined</span></span></div></pre></div>","frontmatter":{"title":"JavaScript基础","date":"2017-04-08"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript-base-knowleges/","previous":{"fields":{"slug":"/linux-open-port/"},"frontmatter":{"title":"Linux防火墙开放端口号"}},"next":{"fields":{"slug":"/linux-install-jdk/"},"frontmatter":{"title":"linux下安装jdk"}}}}