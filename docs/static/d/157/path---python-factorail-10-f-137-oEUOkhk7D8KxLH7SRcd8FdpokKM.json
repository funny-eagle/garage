{"data":{"site":{"siteMetadata":{"title":"🤔️ Jason Yang's Blog","author":"Jason Yang"}},"markdownRemark":{"id":"2946a150-3e41-5913-a511-dd73811191d3","excerpt":"递归简单说来就是调用自身的意思。来看一个幽默的定义：recursion \\ri-‘k&r-zh&n\\ n : see recursion\n（递归名词：见递归）一、计算n的阶乘的阶乘定义为 。使用循环实现首先，把数字赋值给，然后依次与～的数相乘，最后返回结果。阶乘的数学定义：1的阶乘是1；大于1的数n的阶乘是n乘n-…","html":"<p><strong>递归</strong>简单说来就是调用自身的意思。</p>\n<p>来看一个幽默的定义：</p>\n<blockquote>\n<p><strong>recursion</strong> <em>\\ri-‘k&#x26;r-zh&#x26;n\\</em> n : see recursion\n（递归[名词]：见递归）</p>\n</blockquote>\n<h2>一、计算n的阶乘</h2>\n<blockquote>\n<p><code class=\"language-text\">n</code>的阶乘定义为 <code class=\"language-text\">n \\* (n-1) \\* (n-2) \\* ... \\* 1</code>。</p>\n</blockquote>\n<p><strong>使用循环实现</strong></p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>factorial</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>n</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span>result</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span>n</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--repeat syntax--python\"><span>for</span></span><span>&nbsp;</span><span>i</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>range</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span><span>,&nbsp;</span><span>n</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>result</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--augmented syntax--python\"><span>*=</span></span><span>&nbsp;</span><span>i</span><span>&nbsp;</span><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>依次与1至n-1的数相乘</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span>result</span></span></div></pre></div>\n<blockquote>\n<p>首先，把数字<code class=\"language-text\">n</code>赋值给<code class=\"language-text\">result</code>，然后<code class=\"language-text\">result</code>依次与<code class=\"language-text\">1</code>～<code class=\"language-text\">n-1</code>的数相乘，最后返回结果。</p>\n</blockquote>\n<p>阶乘的数学定义：</p>\n<ul>\n<li>1的阶乘是1；</li>\n<li>大于1的数n的阶乘是n乘n-1的阶乘。</li>\n</ul>\n<p><strong>使用递归实现</strong></p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>factorial</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>n</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>if</span></span><span>&nbsp;</span><span>n</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>==</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>else</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span>n</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>*</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>factorial</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>n</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<h2>二、计算幂</h2>\n<p>python的内建函数 <code class=\"language-text\">pow(x, n)</code> 或者 <code class=\"language-text\">**</code> 运算符可以实现幂的计算。<code class=\"language-text\">pow(x, n)</code> 是 <code class=\"language-text\">x</code> 自乘 <code class=\"language-text\">n-1</code>次，例如<code class=\"language-text\">pow(2, 3)</code>是<code class=\"language-text\">2</code>乘以自身两次：<code class=\"language-text\">2 * 2 * 2 = 8</code>。</p>\n<p><strong>使用循环实现</strong></p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>power</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>x</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>n</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span>result</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--repeat syntax--python\"><span>for</span></span><span>&nbsp;</span><span>i</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>range</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>n</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>result</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--augmented syntax--python\"><span>*=</span></span><span>&nbsp;</span><span>x</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span>result</span></span></div></pre></div>\n<p><strong>使用递归实现</strong></p>\n<ul>\n<li>对于任意数字<code class=\"language-text\">x</code>来说，<code class=\"language-text\">power(x, 0)</code>是<code class=\"language-text\">1</code>；</li>\n<li>对于任何大于<code class=\"language-text\">0</code>的数来说，<code class=\"language-text\">power(x, n)</code>是<code class=\"language-text\">x</code>乘以<code class=\"language-text\">(x, n-1)</code>的结果。</li>\n</ul>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>power</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>x</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>n</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>if</span></span><span>&nbsp;</span><span>n</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>==</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>else</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span>x</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>*</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>power</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span>n</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>","frontmatter":{"title":"Python 两个经典递归：阶乘和幂","date":"2017-04-09"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python-factorail/","previous":{"fields":{"slug":"/linux-install-jdk/"},"frontmatter":{"title":"linux下安装jdk"}},"next":{"fields":{"slug":"/whose-face-is-lit-by-the-firework/"},"frontmatter":{"title":"燃起的烟火照亮谁的脸"}}}}